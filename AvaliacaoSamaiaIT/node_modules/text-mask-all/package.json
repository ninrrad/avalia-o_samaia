{
  "_from": "text-mask-all@^0.3.0",
  "_id": "text-mask-all@0.3.0",
  "_inBundle": false,
  "_integrity": "sha1-D6RMMYMbh7jAK/Yl/xfpzxSGbDQ=",
  "_location": "/text-mask-all",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "text-mask-all@^0.3.0",
    "name": "text-mask-all",
    "escapedName": "text-mask-all",
    "rawSpec": "^0.3.0",
    "saveSpec": null,
    "fetchSpec": "^0.3.0"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/text-mask-all/-/text-mask-all-0.3.0.tgz",
  "_shasum": "0fa44c31831b87b8c02bf625ff17e9cf14866c34",
  "_spec": "text-mask-all@^0.3.0",
  "_where": "/home/david/desenvolvimento/workspacePessoal/AvaliacaoSamaiaIT",
  "author": {
    "name": "M.K. Safi",
    "email": "msafi@msafi.com"
  },
  "bugs": {
    "url": "https://github.com/msafi/text-mask/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "Conforms string to given mask or pattern, and can be hooked up to input element",
  "devDependencies": {
    "@angular/common": "2.0.0-rc.2",
    "@angular/compiler": "2.0.0-rc.2",
    "@angular/core": "2.0.0-rc.2",
    "@angular/http": "2.0.0-rc.2",
    "@angular/platform-browser": "2.0.0-rc.2",
    "@angular/platform-browser-dynamic": "2.0.0-rc.2",
    "@angular/router": "2.0.0-rc.2",
    "@angular/router-deprecated": "2.0.0-rc.2",
    "@angular/upgrade": "2.0.0-rc.2",
    "awesome-typescript-loader": "^1.0.0",
    "babel-cli": "^6.4.5",
    "babel-core": "^6.4.5",
    "babel-loader": "^6.2.1",
    "babel-plugin-rewire": "^1.0.0-rc-3",
    "babel-preset-es2015": "^6.3.13",
    "babel-preset-react": "^6.3.13",
    "bootstrap-sass": "^3.3.6",
    "chai": "^3.4.1",
    "classnames": "^2.2.3",
    "core-js": "^2.4.0",
    "css-loader": "^0.23.1",
    "enzyme": "^2.3.0",
    "es6-promise": "^3.0.2",
    "es6-shim": "^0.35.0",
    "eslint": "^3.0.0",
    "eslint-config-standard": "^5.1.0",
    "eslint-plugin-mocha": "^4.0.0",
    "eslint-plugin-promise": "^1.1.0",
    "eslint-plugin-standard": "^1.3.2",
    "file-loader": "^0.9.0",
    "jsdom": "^9.2.1",
    "lodash": "^4.0.0",
    "mocha": "^2.4.5",
    "mocha-dynamic-tests": "^2.0.0",
    "node-sass": "^3.4.2",
    "react": "^15.1.0",
    "react-addons-test-utils": "^15.1.0",
    "react-dom": "^15.1.0",
    "react-hot-loader": "^1.3.0",
    "reflect-metadata": "^0.1.3",
    "rxjs": "^5.0.0-beta.8",
    "sass-loader": "^4.0.0",
    "sinon": "^1.17.3",
    "stats-webpack-plugin": "^0.4.0",
    "style-loader": "^0.13.0",
    "testdom": "^2.0.0",
    "ts-node": "^0.9.3",
    "typescript": "^1.8.10",
    "typings": "^1.0.4",
    "url-loader": "^0.5.7",
    "webpack": "^1.12.12",
    "webpack-dev-server": "^1.14.1",
    "zone.js": "^0.6.6"
  },
  "homepage": "https://github.com/msafi/text-mask#readme",
  "keywords": [
    "text mask",
    "input mask",
    "string mask",
    "input formatting",
    "text formatting",
    "string formatting"
  ],
  "license": "CC0-1.0",
  "main": "index.js",
  "name": "text-mask-all",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/msafi/text-mask.git"
  },
  "scripts": {
    "addons:build": "webpack -p --config addons/webpack.buildAddons.js",
    "addons:publish": "sh addons/publish.sh",
    "addons:tdd": "npm run addons:test -- --watch",
    "addons:test": "mocha --compilers js:babel-core/register addons/test --require ./common/testSetup.js --recursive",
    "addons:verify": "npm run addons:test -- --verify",
    "angular2:build": "webpack -p --config angular2/webpack.buildAngular2Integration.js",
    "angular2:dev": "webpack-dev-server --content-base angular2/example --port 3000 --config angular2/example/webpack.runAngular2Example.js",
    "angular2:publish": "sh angular2/publish.sh",
    "angular2:tdd": "npm run angular2:test -- --watch",
    "angular2:test": "mocha --compilers js:babel-core/register angular2/test --require ./common/domSetup.js --recursive",
    "angular2:verify": "npm run angular2:test -- --verify",
    "angular2:watch": "webpack --watch --config angular2/webpack.buildAngular2Integration.js",
    "build": "npm run core:build && npm run react:build && npm run vanilla:build && npm run angular2:build && npm run website:build && npm run addons:build",
    "ci": "npm run test && npm run build && npm run verify",
    "core:build": "webpack -p --config core/webpack.buildCore.js",
    "core:publish": "sh core/publish.sh",
    "core:tdd": "npm run core:test -- --watch",
    "core:test": "mocha --compilers js:babel-core/register core/test --require ./common/domSetup.js --recursive",
    "core:verify": "npm run core:test -- --verify",
    "git:done": "git checkout gh-pages && git merge master && git checkout master && git push origin master --tags && git push origin gh-pages",
    "lint": "eslint . --ext .js --ext .jsx --fix || true",
    "loud-lint": "eslint . --ext .js --ext .jsx",
    "react:build": "webpack -p --config react/webpack.buildReactIntegration.js",
    "react:dev": "node react/example/server.js",
    "react:publish": "sh react/publish.sh",
    "react:tdd": "npm run react:test -- --watch",
    "react:test": "mocha --compilers jsx:babel-core/register react/test --require ./common/domSetup.js --recursive",
    "react:verify": "npm run react:test -- --verify",
    "react:watch": "webpack --watch --config react/webpack.buildReactIntegration.js",
    "test": "npm run loud-lint && npm run core:test && npm run react:test && npm run vanilla:test && npm run angular2:test && npm run addons:test",
    "textMask:publish": "sh publish.sh",
    "vanilla:build": "webpack -p --config vanilla/webpack.buildVanillaIntegration.js",
    "vanilla:dev": "webpack-dev-server --content-base vanilla/example --port 3000 --config vanilla/example/webpack.runVanillaExample.js",
    "vanilla:publish": "sh vanilla/publish.sh",
    "vanilla:tdd": "npm run vanilla:test -- --watch",
    "vanilla:test": "mocha --compilers js:babel-core/register vanilla/test --require ./common/domSetup.js --recursive",
    "vanilla:verify": "npm run vanilla:test -- --verify",
    "vanilla:watch": "webpack --watch --config vanilla/webpack.buildVanillaIntegration.js",
    "verify": "npm run core:verify && npm run react:verify && npm run vanilla:verify && npm run angular2:verify && npm run addons:verify",
    "website": "node website/server.js",
    "website:build": "webpack -p --config website/webpack.buildWebsite.js"
  },
  "version": "0.3.0"
}
